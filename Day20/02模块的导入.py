# import Demo
# 导入规律：
#   内置模块
#   扩展模块
#   自定义模块

# 模块导入一般放在一个文件的开始
# 不推荐使用多个模块一起导入：
# import os, sys, time

# 导入模块的方法有：
# import 模块名
#   将这个模块的所有变量名都导入到命名空间中，占用内存
#   调用变量的方法 模块名.变量名
#   以后自己再定义相同变量名的方法也不会因为重名覆盖

# import 模块名 from 变量名
#   将这个模块下的某个变量名导入，直接用变量名调用，但是会存在相同变量名重新定义覆盖的问题

# import 模块名 from *
#   将这个模块中的所有变量名导入，使用变量名直接调用，但是存在覆盖问题
#   使用__all__ = []来将要使用这种方法导入的变量名放在列表中，进行部分导入

# 在调用模块的时候使用__name__变量获取执行的方法，在模块所在的文件中运行的时候返回的是__main__
# 而在调用这个模块的时候获取的是模块名，即模块所在的文件名字

# 模块之所以不会被重复导入是因为python解释器在导入模块的时候进行检测：
#   去sys.moduals列表中去查找是不是已经导入了这个模块
# 在sys.path列表中去获取导入模块的路径

# import 模块名 as 自定义名字
# 将一个模块命名为自定义名字，使用自定义名字.变量名进行调用，提高代码的兼容性
