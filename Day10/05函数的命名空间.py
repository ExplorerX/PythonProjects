# 函数的进阶
# a = 1
#
#
# def func():
#     print(a)
#
#
# func()

# 命名空间和作用域

# 命名空间有三种：
# 内置命名空间：就是python解释器已启动就可以使用的名字，存储在内置命名空间中 比如print() input()直接拿过来就能用的
#   内置的名字在启动解释器的时候被加载进内存中
# 全局命名空间：我们写的代码但不是函数中的代码
#   在程序从上到下执行的过程中依次被加载到内存的
#   放置了我们设置的所有函数名和变量名
# 局部命名空间：与函数有关系
#   就是函数内部定义的名字
#   当调用函数的时候才会产生这个名称空间，随着函数执行的结束，这个命名空间就又回收了
# 在局部：可以使用全局中的名字，可以使用内置命名空间中的名字
# 在全局：可以使用内置命名空间中的名字，但是不可以使用局部命名空间的名字
# 在内置：是不能使用内部和全局的名字的

# 在正常起情况下，直接可以使用内置里面的名字
# 当我们在全局定义了和内置命名空间同名的名字时，会使用全局的名字
# 当我自己有的时候，我就不找我的上级要了
# 如果自己没有，就找上一级要，如果上一级也没有就报错

# 多个函数应该拥有多个独立的局部命名空间，不互相共享


# 作用域
# 全局作用域：作用在全局——内置和全局名字空间中都属于全局作用域 使用globals()进行查看
# 局部作用域：作用在局部——函数（局部命名空间中的名字属于局部作用域）使用locals()进行查看
# 对于不可变数据类型，在局部可以查看全局作用域中的变量
# 但是不能直接修改
# 如果想要修改，需要在程序中添加一个global声明
# 如果在一个局部函数中声明了一个global变量，那么这个变量在局部的所有操作会将对全局的变量有效
