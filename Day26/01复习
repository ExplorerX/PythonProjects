接口类 抽象类
python中没有接口类，有抽象类
通过abc模块中的ABCmeta和@abstructmethod
本质是做代码规范用的，希望在子类中实现和父类方法名字完全一样的方法
在java的角度上看是有区别的：
    java没有多继承，为了接口隔离原则，就设计了接口的概念，接口这个概念就支持多继承了
    java本来就支持单继承，所以就有了抽象类
在python中既支持单继承又支持多继承，所以对于接口类和抽象类的区别就不那么明显了
甚至poython中没有内置接口类

多态和鸭子类型：
多态：python天生就支持多态
鸭子类型：在不依赖父类的情况下实现两个相似的类中的同名方法

封装：私有的
在python中只要__名字
在python中只要__名字，就能把这个名字私有化
私有化之后就不能从类的外部直接调用了
静态属性 方法 对象属性 都可以私有化
这种私有化知识从代码级别做了变形，并没有真的约束
变形机制 _类名__名字 在类外用这个调用，在类的内部直接__名字调用